From: =?utf-8?q?Lukas_M=C3=A4rdian?= <slyon@ubuntu.com>
Date: Wed, 23 Nov 2022 17:16:47 +0100
Subject: test:cli:set: add regression cases for LP: #1997467

When parsing the full YAML hierarchy (from 'netplan set'), new settings might
not end up in the "to_write" GList (and therefore not in the new origin-hint
file), as the same interface might have been defined in another, previous file
(e.g. 0-snapd-defaults.yaml) and therefore any updates are redirected to that
previous file, or ignored if a origin-hint is passed, which does not match
the previous filename (e.g. origin-hint: 90-snapd-config.yaml).

Still we need to parse the full YAML hierarchy for validation reasons, as a new
origin-hint file might describe new definitions of an interface that contains
references to a netdef from another YAML file. E.g.:

$ cat 0-snapd-defaults.yaml
network:
  ethernets:
    eth0:
      dhcp4: true

$ netplan set --origin-hint=90-snapd-config "bridges.br54.interfaces=[eth0]"

=> This would fail if we wouldn't parse the full YAML hierarchy, before writing
the 90-snapd-config.yaml file, as it would not be aware of the "eth0" netdef.
---
 tests/test_cli_get_set.py | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/tests/test_cli_get_set.py b/tests/test_cli_get_set.py
index 110e167..c4ed860 100644
--- a/tests/test_cli_get_set.py
+++ b/tests/test_cli_get_set.py
@@ -97,6 +97,31 @@ class TestSet(unittest.TestCase):
         with open(p, 'r') as f:
             self.assertIs(True, yaml.safe_load(f)['network']['ethernets']['eth0']['dhcp4'])
 
+    def test_set_origin_hint_override(self):
+        defaults = os.path.join(self.workdir.name, 'etc', 'netplan', '0-snapd-defaults.yaml')
+        with open(defaults, 'w') as f:
+            f.write('''network:
+  bridges: {br54: {dhcp4: true}}
+  ethernets: {eth0: {dhcp4: true}}''')
+        self._set(['bridges.br54.dhcp4=false', '--origin-hint=90-snapd-config'])
+        self._set(['bridges.br54.interfaces=[eth0]', '--origin-hint=90-snapd-config'])
+        p = os.path.join(self.workdir.name, 'etc', 'netplan', '90-snapd-config.yaml')
+        self.assertTrue(os.path.isfile(p))
+        with open(p, 'r') as f:
+            self.assertIs(False, yaml.safe_load(f)['network']['bridges']['br54']['dhcp4'])
+
+    def test_set_origin_hint_extend(self):
+        p = os.path.join(self.workdir.name, 'etc', 'netplan', '90-snapd-config.yaml')
+        with open(p, 'w') as f:
+            f.write('''network: {bridges: {br54: {dhcp4: true}}}''')
+        self._set(['bridges.br54.dhcp4=false', '--origin-hint=90-snapd-config'])
+        self._set(['bridges.br55.dhcp4=true', '--origin-hint=90-snapd-config'])
+        self.assertTrue(os.path.isfile(p))
+        with open(p, 'r') as f:
+            yml = yaml.safe_load(f)
+            self.assertIs(False, yml['network']['bridges']['br54']['dhcp4'])
+            self.assertIs(True, yml['network']['bridges']['br55']['dhcp4'])
+
     def test_set_empty_origin_hint(self):
         with self.assertRaises(Exception) as context:
             self._set(['ethernets.eth0.dhcp4=true', '--origin-hint='])
