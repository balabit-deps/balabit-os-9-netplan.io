From: Danilo Egea Gondolfo <danilo.egea.gondolfo@canonical.com>
Date: Fri, 16 Jun 2023 18:27:13 +0100
Subject: parser: add support for WPA3-Personal

Bug: https://bugs.launchpad.net/netplan/+bug/2023238
Origin: https://github.com/canonical/netplan/pull/369/commits/1d312a17980230a34907f005d67d2ca3793781bf

WPA3 requires setting the key-management to SAE (Simultaneous
Authentication of Equals) and enabling ieee80211w (Management
Frame Protection)

Adopted test/generator/base.py for test/generato/wifi.py changes.
---
 src/abi.h                     |  1 +
 src/names.c                   |  1 +
 src/networkd.c                | 12 +++++++++-
 src/nm.c                      |  3 +++
 src/parse-nm.c                |  4 ++++
 src/parse.c                   |  2 ++
 tests/generator/base.py       |  5 ++++
 tests/generator/test_wifis.py | 53 +++++++++++++++++++++++++++++++++++++++++++
 tests/parser/test_keyfile.py  |  3 +--
 9 files changed, 81 insertions(+), 3 deletions(-)

diff --git a/src/abi.h b/src/abi.h
index eb78960..3ab476d 100644
--- a/src/abi.h
+++ b/src/abi.h
@@ -107,6 +107,7 @@ typedef enum {
     NETPLAN_AUTH_KEY_MANAGEMENT_WPA_PSK,
     NETPLAN_AUTH_KEY_MANAGEMENT_WPA_EAP,
     NETPLAN_AUTH_KEY_MANAGEMENT_8021X,
+    NETPLAN_AUTH_KEY_MANAGEMENT_WPA_SAE,
     NETPLAN_AUTH_KEY_MANAGEMENT_MAX,
 } NetplanAuthKeyManagementType;
 
diff --git a/src/names.c b/src/names.c
index f1113f5..edf3b64 100644
--- a/src/names.c
+++ b/src/names.c
@@ -58,6 +58,7 @@ netplan_auth_key_management_type_to_str[NETPLAN_AUTH_KEY_MANAGEMENT_MAX] = {
     [NETPLAN_AUTH_KEY_MANAGEMENT_NONE] = "none",
     [NETPLAN_AUTH_KEY_MANAGEMENT_WPA_PSK] = "psk",
     [NETPLAN_AUTH_KEY_MANAGEMENT_WPA_EAP] = "eap",
+    [NETPLAN_AUTH_KEY_MANAGEMENT_WPA_SAE] = "sae",
     [NETPLAN_AUTH_KEY_MANAGEMENT_8021X] = "802.1x",
 };
 
diff --git a/src/networkd.c b/src/networkd.c
index e3ac5c0..13d3d20 100644
--- a/src/networkd.c
+++ b/src/networkd.c
@@ -1033,6 +1033,15 @@ append_wpa_auth_conf(GString* s, const NetplanAuthenticationSettings* auth, cons
             g_string_append(s, "  key_mgmt=WPA-EAP\n");
             break;
 
+        case NETPLAN_AUTH_KEY_MANAGEMENT_WPA_SAE:
+            /*
+             * SAE is used by WPA3 and Management Frame Protection
+             * (ieee80211w) is mandatory.
+             */
+            g_string_append(s, "  key_mgmt=SAE\n");
+            g_string_append(s, "  ieee80211w=2\n");
+            break;
+
         case NETPLAN_AUTH_KEY_MANAGEMENT_8021X:
             g_string_append(s, "  key_mgmt=IEEE8021X\n");
             break;
@@ -1066,7 +1075,8 @@ append_wpa_auth_conf(GString* s, const NetplanAuthenticationSettings* auth, cons
         g_string_append_printf(s, "  anonymous_identity=\"%s\"\n", auth->anonymous_identity);
     }
     if (auth->password) {
-        if (auth->key_management == NETPLAN_AUTH_KEY_MANAGEMENT_WPA_PSK) {
+        if (auth->key_management == NETPLAN_AUTH_KEY_MANAGEMENT_WPA_PSK ||
+            auth->key_management == NETPLAN_AUTH_KEY_MANAGEMENT_WPA_SAE) {
             size_t len = strlen(auth->password);
             if (len == 64) {
                 /* must be a hex-digit key representation */
diff --git a/src/nm.c b/src/nm.c
index 10a9520..de08dcd 100644
--- a/src/nm.c
+++ b/src/nm.c
@@ -442,6 +442,9 @@ write_wifi_auth_parameters(const NetplanAuthenticationSettings* auth, GKeyFile *
         case NETPLAN_AUTH_KEY_MANAGEMENT_WPA_EAP:
             g_key_file_set_string(kf, "wifi-security", "key-mgmt", "wpa-eap");
             break;
+        case NETPLAN_AUTH_KEY_MANAGEMENT_WPA_SAE:
+            g_key_file_set_string(kf, "wifi-security", "key-mgmt", "sae");
+            break;
         case NETPLAN_AUTH_KEY_MANAGEMENT_8021X:
             g_key_file_set_string(kf, "wifi-security", "key-mgmt", "ieee8021x");
             break;
diff --git a/src/parse-nm.c b/src/parse-nm.c
index dcd71c5..0bccd69 100644
--- a/src/parse-nm.c
+++ b/src/parse-nm.c
@@ -900,6 +900,10 @@ netplan_parser_load_keyfile(NetplanParser* npp, const char* filename, GError** e
             ap->auth.key_management = NETPLAN_AUTH_KEY_MANAGEMENT_WPA_EAP;
             ap->has_auth = TRUE;
             _kf_clear_key(kf, "wifi-security", "key-mgmt");
+        } else if (tmp_str && g_strcmp0(tmp_str, "sae") == 0) {
+            ap->auth.key_management = NETPLAN_AUTH_KEY_MANAGEMENT_WPA_SAE;
+            ap->has_auth = TRUE;
+            _kf_clear_key(kf, "wifi-security", "key-mgmt");
         } else if (tmp_str && g_strcmp0(tmp_str, "ieee8021x") == 0) {
             ap->auth.key_management = NETPLAN_AUTH_KEY_MANAGEMENT_8021X;
             ap->has_auth = TRUE;
diff --git a/src/parse.c b/src/parse.c
index aea1a21..a06fc50 100644
--- a/src/parse.c
+++ b/src/parse.c
@@ -887,6 +887,8 @@ handle_auth_key_management(NetplanParser* npp, yaml_node_t* node, const void* _,
         auth->key_management = NETPLAN_AUTH_KEY_MANAGEMENT_WPA_PSK;
     else if (strcmp(scalar(node), "eap") == 0)
         auth->key_management = NETPLAN_AUTH_KEY_MANAGEMENT_WPA_EAP;
+    else if (strcmp(scalar(node), "sae") == 0)
+        auth->key_management = NETPLAN_AUTH_KEY_MANAGEMENT_WPA_SAE;
     else if (strcmp(scalar(node), "802.1x") == 0)
         auth->key_management = NETPLAN_AUTH_KEY_MANAGEMENT_8021X;
     else
diff --git a/tests/generator/base.py b/tests/generator/base.py
index 59cefd2..6e897d8 100644
--- a/tests/generator/base.py
+++ b/tests/generator/base.py
@@ -411,6 +411,11 @@ class TestBase(unittest.TestCase):
                 r.add(line[len(prefix):])
         return r
 
+    def assert_wpa_supplicant(self, iface, content):
+        conf_path = os.path.join(self.workdir.name, 'run', 'netplan', "wpa-" + iface + ".conf")
+        with open(conf_path) as f:
+            self.assertEqual(f.read(), content)
+
     def assert_nm(self, connections_map=None, conf=None):
         # check config
         conf_path = os.path.join(self.workdir.name, 'run', 'NetworkManager', 'conf.d', 'netplan.conf')
diff --git a/tests/generator/test_wifis.py b/tests/generator/test_wifis.py
index 7199ae6..28409c6 100644
--- a/tests/generator/test_wifis.py
+++ b/tests/generator/test_wifis.py
@@ -342,6 +342,27 @@ network={
         self.assertTrue(os.path.islink(os.path.join(
             self.workdir.name, 'run/systemd/system/systemd-networkd.service.wants/netplan-wpa-wl0.service')))
 
+    def test_wifi_wpa3(self):
+        self.generate('''network:
+  version: 2
+  wifis:
+    wl0:
+      access-points:
+        homenet:
+          auth:
+            key-management: sae
+            password: "********"''')
+
+        self.assert_wpa_supplicant("wl0", """ctrl_interface=/run/wpa_supplicant
+
+network={
+  ssid="homenet"
+  key_mgmt=SAE
+  ieee80211w=2
+  psk="********"
+}
+""")
+
 
 class TestNetworkManager(TestBase):
 
@@ -602,6 +623,38 @@ method=ignore
 [wifi]
 ssid=homenet
 mode=adhoc
+'''})
+
+    def test_wifi_wpa3(self):
+        self.generate('''network:
+  version: 2
+  renderer: NetworkManager
+  wifis:
+    wl0:
+      access-points:
+        homenet:
+          auth:
+            key-management: sae
+            password: "********"''')
+
+        self.assert_nm({'wl0-homenet': '''[connection]
+id=netplan-wl0-homenet
+type=wifi
+interface-name=wl0
+
+[ipv4]
+method=link-local
+
+[ipv6]
+method=ignore
+
+[wifi]
+ssid=homenet
+mode=infrastructure
+
+[wifi-security]
+key-mgmt=sae
+psk=********
 '''})
 
     def test_wifi_wowlan(self):
diff --git a/tests/parser/test_keyfile.py b/tests/parser/test_keyfile.py
index a4ebd94..d362aa5 100644
--- a/tests/parser/test_keyfile.py
+++ b/tests/parser/test_keyfile.py
@@ -1268,13 +1268,12 @@ method=auto
       access-points:
         "ubuntu-wpa2-wpa3-mixed":
           auth:
-            key-management: "none"
+            key-management: "sae"
             password: "test1234"
           networkmanager:
             uuid: "ff9d6ebc-226d-4f82-a485-b7ff83b9607f"
             name: "test2"
             passthrough:
-              wifi-security.key-mgmt: "sae"
               ipv6.ip6-privacy: "-1"
               proxy._: ""
       networkmanager:
